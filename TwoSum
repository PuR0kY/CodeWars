Given a sequence of numbers, find the largest pair sum in the sequence.

For example

[10, 14, 2, 23, 19] -->  42 (= 23 + 19)
[99, 2, 2, 23, 19]  --> 122 (= 99 + 23)
Input sequence contains minimum two elements and every element is an integer.

import java.util.*;
public class Solution{
    public static int largestPairSum(int[] numbers){
        int maxNumber1 = numbers[0];
        for (int i = 0; i < numbers.length; i++){
            if (numbers[i] > maxNumber1){
                maxNumber1 = numbers[i];
            }
            Arrays.sort(numbers);


        }
        return maxNumber1 + numbers[numbers.length-2] ;
    }
}

public class SolutionTest{
    @Test
    public void basicTestCases(){
        assertEquals("Failed test case [10, 14, 2, 23, 19]:", 42, Solution.largestPairSum(new int[]{10,14,2,23,19}));
        assertEquals("Failed test case [-100, -29, -24, -19, 19]:", 0, Solution.largestPairSum(new int[]{-100,-29,-24,-19,19}));
        assertEquals("Failed test case [1, 2, 3, 4, 6, -1, 2]:", 10, Solution.largestPairSum(new int[]{1,2,3,4,6,-1,2}));
        assertEquals("Failed test case [-10, -8, -16, -18, -19]:", -18, Solution.largestPairSum(new int[]{-10,-8,-16,-18,-19}));
    }
}
